{"version":3,"sources":["components/Tweets.js","components/SearchUsersTweets.js","App.js","reportWebVitals.js","index.js"],"names":["Tweets","props","tweets","recentTweets","data","map","tweet","className","text","id","SearchUsersTweets","useState","setRecentTweets","twitterUserName","setTwitterUserName","useEffect","apiUrl","fetch","method","then","response","json","console","log","type","name","value","onChange","e","target","placeholder","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAWeA,MAXf,SAAgBC,GAAQ,IAAD,EACjBC,EAAM,UAAGD,EAAME,aAAaC,YAAtB,aAAG,EAAyBC,KAAI,SAACC,GAAD,OAAW,oBAAIC,UAAU,kBAAd,SAAgDD,EAAME,MAAjBF,EAAMG,OAChG,OACE,qBAAKF,UAAU,OAAf,SACE,oBAAIA,UAAU,aAAd,SACGL,OCyBMQ,MA3Bf,WAA8B,IAAD,EACWC,mBAAS,IADpB,mBACtBR,EADsB,KACRS,EADQ,OAEiBD,mBAAS,gBAF1B,mBAEtBE,EAFsB,KAELC,EAFK,KAe3B,OAZAC,qBAAU,WACR,IAAMC,EAAM,kEAA8DH,GAC1EI,MAAMD,EAAQ,CACZE,OAAQ,QAEPC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACf,GACLkB,QAAQC,IAAI,oBAAqBnB,GACjCQ,EAAgBR,QAEnB,CAACS,IAGF,gCACE,qBAAKN,UAAU,uCAAf,SACE,uBAAMA,UAAU,cAAhB,cACG,uBAAOiB,KAAK,OAAOC,KAAK,WAAWC,MAAOb,EAAiBc,SAAU,SAAAC,GAAC,OAAId,EAAmBc,EAAEC,OAAOH,QAAQI,YAAY,oCAAoCvB,UAAU,8BAG7K,cAAC,EAAD,CAAQJ,aAAcA,QCfb4B,MARf,WACE,OACE,qBAAKxB,UAAU,MAAf,SACE,cAAC,EAAD,OCOSyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,qBAAKnC,UAAU,8BAAf,SACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,aAEf,qBAAKA,UAAU,qBAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,oBAMrBoC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.84bdef31.chunk.js","sourcesContent":["function Tweets(props) {\r\n  let tweets = props.recentTweets.data?.map((tweet) => <li className=\"list-group-item\" key={tweet.id}>{tweet.text}</li>)\r\n  return (\r\n    <div className='card'>\r\n      <ul className=\"list-group\">\r\n        {tweets}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tweets;","import { useState, useEffect } from 'react';\r\nimport Tweets from './Tweets';\r\n\r\nfunction SearchUsersTweets() {\r\n  let [recentTweets, setRecentTweets] = useState([]);\r\n  let [twitterUserName, setTwitterUserName] = useState('Platform9Sys');\r\n  useEffect(() => {\r\n    const apiUrl = `http://localhost:5000/search_tweet_by_usernsme?username=${twitterUserName}`;\r\n    fetch(apiUrl, {\r\n      method: 'GET'\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log('This is your data', data)\r\n        setRecentTweets(data);\r\n      });\r\n  }, [twitterUserName]);\r\n\r\n  return (\r\n    <div >\r\n      <nav className=\"navbar navbar-light bg-light mb-sm-2\">\r\n        <form className=\"form-inline\">\r\n          @<input type=\"text\" name=\"username\" value={twitterUserName} onChange={e => setTwitterUserName(e.target.value)} placeholder='Search recent tweets by user name' className=\"form-control mr-sm-2\" />\r\n        </form>\r\n      </nav>\r\n      <Tweets recentTweets={recentTweets} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchUsersTweets;\r\n\r\n","import SearchUsersTweets from './components/SearchUsersTweets';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <SearchUsersTweets />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <div className=\"container-fluid text-center\">\r\n      <div className=\"row content\">\r\n        <div className=\"col-sm-2\">\r\n        </div>\r\n        <div className=\"col-sm-8 text-left\">\r\n          <App />\r\n        </div>\r\n        <div className=\"col-sm-2\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}